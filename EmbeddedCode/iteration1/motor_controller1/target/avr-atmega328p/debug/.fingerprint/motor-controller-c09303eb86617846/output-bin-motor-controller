{"$message_type":"diagnostic","message":"the item `ufmt` is imported redundantly","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"the item `ufmt` is already defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":100,"byte_end":104,"line_start":7,"line_end":7,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use ufmt;","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the item `ufmt` is imported redundantly\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ufmt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe item `ufmt` is already defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `avr_device::interrupt::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":223,"byte_end":251,"line_start":10,"line_end":10,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use avr_device::interrupt::Mutex;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":219,"byte_end":252,"line_start":10,"line_end":10,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use avr_device::interrupt::Mutex;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `avr_device::interrupt::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse avr_device::interrupt::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `avr_device::atmega328p`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":257,"byte_end":279,"line_start":11,"line_end":11,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use avr_device::atmega328p;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":253,"byte_end":280,"line_start":11,"line_end":11,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use avr_device::atmega328p;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `avr_device::atmega328p`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse avr_device::atmega328p;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":947,"byte_end":976,"line_start":39,"line_end":39,"column_start":23,"column_end":52,"is_primary":true,"text":[{"text":"    let a: QuadPinA = pins.d2.into_floating_input();","highlight_start":23,"highlight_end":52}],"label":"expected `Pin<Input<Floating>, Pins>`, found `Pin<Input<Floating>, PD2>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":936,"byte_end":944,"line_start":39,"line_end":39,"column_start":12,"column_end":20,"is_primary":false,"text":[{"text":"    let a: QuadPinA = pins.d2.into_floating_input();","highlight_start":12,"highlight_end":20}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `avr_hal_generic::port::Pin<_, arduino_hal::Pins>`\n   found struct `avr_hal_generic::port::Pin<_, PD2>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:39:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let a: QuadPinA = pins.d2.into_floating_input();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Pin<Input<Floating>, Pins>`, found `Pin<Input<Floating>, PD2>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected due to this\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `avr_hal_generic::port::Pin<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35marduino_hal::Pins\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m              found struct `avr_hal_generic::port::Pin<_, \u001b[0m\u001b[0m\u001b[1m\u001b[35mPD2\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `is_high` exists for struct `Pin<Input<Floating>, Pins>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1389,"byte_end":1396,"line_start":55,"line_end":55,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"    let mut motor1 = Motor::new(a.is_high(), b.is_high(), 8000);","highlight_start":35,"highlight_end":42}],"label":"method cannot be called on `Pin<Input<Floating>, Pins>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/avr-hal-generic/src/port.rs","byte_start":25366,"byte_end":25381,"line_start":785,"line_end":785,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        pub struct Pins {","highlight_start":9,"highlight_end":24}],"label":"doesn't satisfy `arduino_hal::Pins: PinOps`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/arduino-hal/src/port/uno.rs","byte_start":57,"byte_end":4759,"line_start":3,"line_end":131,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"avr_hal_generic::renamed_pins! {","highlight_start":1,"highlight_end":1},{"text":"    /// Pins of the **Arduino Uno**, **Arduino Nano**, **SparkFun ProMini 3.3V (8Mhz)**, and **SparkFun ProMini 5V (16MHz)**.","highlight_start":1,"highlight_end":1},{"text":"    ///","highlight_start":1,"highlight_end":1},{"text":"    /// This struct is best initialized via the [`arduino_hal::pins!()`][crate::pins] macro.","highlight_start":1,"highlight_end":1},{"text":"    pub struct Pins {","highlight_start":1,"highlight_end":1},{"text":"        /// `A0`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * ADC0 (ADC input channel 0)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT8 (pin change interrupt 8)","highlight_start":1,"highlight_end":1},{"text":"        pub a0: atmega_hal::port::PC0 = pc0,","highlight_start":1,"highlight_end":1},{"text":"        /// `A1`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * ADC1 (ADC input channel 1)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT9 (pin change interrupt 9)","highlight_start":1,"highlight_end":1},{"text":"        pub a1: atmega_hal::port::PC1 = pc1,","highlight_start":1,"highlight_end":1},{"text":"        /// `A2`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * ADC2 (ADC input channel 2)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT10 (pin change interrupt 10)","highlight_start":1,"highlight_end":1},{"text":"        pub a2: atmega_hal::port::PC2 = pc2,","highlight_start":1,"highlight_end":1},{"text":"        /// `A3`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * ADC3 (ADC input channel 3)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT11 (pin change interrupt 11)","highlight_start":1,"highlight_end":1},{"text":"        pub a3: atmega_hal::port::PC3 = pc3,","highlight_start":1,"highlight_end":1},{"text":"        /// `A4`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * ADC4 (ADC input channel 4)","highlight_start":1,"highlight_end":1},{"text":"        /// * SDA (2-wire serial bus data input/output line)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT12 (pin change interrupt 12)","highlight_start":1,"highlight_end":1},{"text":"        pub a4: atmega_hal::port::PC4 = pc4,","highlight_start":1,"highlight_end":1},{"text":"        /// `A5`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// ADC5 (ADC input channel 5)","highlight_start":1,"highlight_end":1},{"text":"        /// SCL (2-wire serial bus clock line)","highlight_start":1,"highlight_end":1},{"text":"        /// PCINT13 (pin change interrupt 13)","highlight_start":1,"highlight_end":1},{"text":"        pub a5: atmega_hal::port::PC5 = pc5,","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// `D0` / `RX`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * RXD (USART input pin)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT16 (pin change interrupt 16)","highlight_start":1,"highlight_end":1},{"text":"        pub d0: atmega_hal::port::PD0 = pd0,","highlight_start":1,"highlight_end":1},{"text":"        /// `D1` / `TX`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * TXD (USART output pin)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT17 (pin change interrupt 17)","highlight_start":1,"highlight_end":1},{"text":"        pub d1: atmega_hal::port::PD1 = pd1,","highlight_start":1,"highlight_end":1},{"text":"        /// `D2`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * INT0 (external interrupt 0 input)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT18 (pin change interrupt 18)","highlight_start":1,"highlight_end":1},{"text":"        pub d2: atmega_hal::port::PD2 = pd2,","highlight_start":1,"highlight_end":1},{"text":"        /// `D3`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":1},{"text":"        /// * INT1 (external interrupt 1 input)","highlight_start":1,"highlight_end":1},{"text":"        /// * OC2B (Timer/Counter2 output compare match B output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT19 (pin change interrupt 19)","highlight_start":1,"highlight_end":1},{"text":"        pub d3: atmega_hal::port::PD3 = pd3,","highlight_start":1,"highlight_end":1},{"text":"        /// `D4`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * XCK (USART external clock input/output)","highlight_start":1,"highlight_end":1},{"text":"        /// * T0 (Timer/Counter 0 external counter input)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT20 (pin change interrupt 20)","highlight_start":1,"highlight_end":1},{"text":"        pub d4: atmega_hal::port::PD4 = pd4,","highlight_start":1,"highlight_end":1},{"text":"        /// `D5`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":1},{"text":"        /// * T1 (Timer/Counter 1 external counter input)","highlight_start":1,"highlight_end":1},{"text":"        /// * OC0B (Timer/Counter0 output compare match B output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT21 (pin change interrupt 21)","highlight_start":1,"highlight_end":1},{"text":"        pub d5: atmega_hal::port::PD5 = pd5,","highlight_start":1,"highlight_end":1},{"text":"        /// `D6`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":1},{"text":"        /// * AIN0 (analog comparator positive input)","highlight_start":1,"highlight_end":1},{"text":"        /// * OC0A (Timer/Counter0 output compare match A output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT22 (pin change interrupt 22)","highlight_start":1,"highlight_end":1},{"text":"        pub d6: atmega_hal::port::PD6 = pd6,","highlight_start":1,"highlight_end":1},{"text":"        /// `D7`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * AIN1 (analog comparator negative input)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT23 (pin change interrupt 23)","highlight_start":1,"highlight_end":1},{"text":"        pub d7: atmega_hal::port::PD7 = pd7,","highlight_start":1,"highlight_end":1},{"text":"        /// `D8`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * ICP1 (Timer/Counter1 input capture input)","highlight_start":1,"highlight_end":1},{"text":"        /// * CLKO (divided system clock output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT0 (pin change interrupt 0)","highlight_start":1,"highlight_end":1},{"text":"        pub d8: atmega_hal::port::PB0 = pb0,","highlight_start":1,"highlight_end":1},{"text":"        /// `D9`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":1},{"text":"        /// * OC1A (Timer/Counter1 output compare match A output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT1 (pin change interrupt 1)","highlight_start":1,"highlight_end":1},{"text":"        pub d9: atmega_hal::port::PB1 = pb1,","highlight_start":1,"highlight_end":1},{"text":"        /// `D10`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":1},{"text":"        /// * SS (SPI bus master slave select)","highlight_start":1,"highlight_end":1},{"text":"        /// * OC1B (Timer/Counter1 output compare match B output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT2 (pin change interrupt 2)","highlight_start":1,"highlight_end":1},{"text":"        pub d10: atmega_hal::port::PB2 = pb2,","highlight_start":1,"highlight_end":1},{"text":"        /// `D11`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":1},{"text":"        /// * MOSI (SPI bus master/slave input)","highlight_start":1,"highlight_end":1},{"text":"        /// * OC2A (Timer/Counter2 output compare match A output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT3 (pin change interrupt 3)","highlight_start":1,"highlight_end":1},{"text":"        pub d11: atmega_hal::port::PB3 = pb3,","highlight_start":1,"highlight_end":1},{"text":"        /// `D12`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * MISO (SPI bus master input/slave output)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT4 (pin change interrupt 4)","highlight_start":1,"highlight_end":1},{"text":"        pub d12: atmega_hal::port::PB4 = pb4,","highlight_start":1,"highlight_end":1},{"text":"        /// `D13`","highlight_start":1,"highlight_end":1},{"text":"        ///","highlight_start":1,"highlight_end":1},{"text":"        /// * SCK (SPI bus master clock input)","highlight_start":1,"highlight_end":1},{"text":"        /// * PCINT5 (pin change interrupt 5)","highlight_start":1,"highlight_end":1},{"text":"        /// * L LED on Arduino Uno","highlight_start":1,"highlight_end":1},{"text":"        pub d13: atmega_hal::port::PB5 = pb5,","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    impl Pins {","highlight_start":1,"highlight_end":1},{"text":"        type Pin = Pin;","highlight_start":1,"highlight_end":1},{"text":"        type McuPins = atmega_hal::Pins;","highlight_start":1,"highlight_end":1},{"text":"    }","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"avr_hal_generic::renamed_pins!","def_site_span":{"file_name":"/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/avr-hal-generic/src/port.rs","byte_start":25014,"byte_end":25039,"line_start":772,"line_end":772,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! renamed_pins {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following trait bounds were not satisfied:\n`arduino_hal::Pins: PinOps`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `is_high` exists for struct `Pin<Input<Floating>, Pins>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:55:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    let mut motor1 = Motor::new(a.is_high(), b.is_high(), 8000);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Pin<Input<Floating>, Pins>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/arduino-hal/src/port/uno.rs:3:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mavr_hal_generic::renamed_pins! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Pins of the **Arduino Uno**, **Arduino Nano**, **SparkFun ProMini 3.3V (8Mhz)**, and **SparkFun ProMini 5V (16MHz)**.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// This struct is best initialized via the [`arduino_hal::pins!()`][crate::pins] macro.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `arduino_hal::Pins: PinOps`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `arduino_hal::Pins: PinOps`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `is_high` exists for struct `Pin<Input<Floating>, Pins>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1549,"byte_end":1556,"line_start":61,"line_end":61,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"            let a_val = a.is_high();","highlight_start":27,"highlight_end":34}],"label":"method cannot be called on `Pin<Input<Floating>, Pins>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/avr-hal-generic/src/port.rs","byte_start":25366,"byte_end":25381,"line_start":785,"line_end":785,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        pub struct Pins {","highlight_start":9,"highlight_end":24}],"label":"doesn't satisfy `arduino_hal::Pins: PinOps`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/arduino-hal/src/port/uno.rs","byte_start":57,"byte_end":4759,"line_start":3,"line_end":131,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"avr_hal_generic::renamed_pins! {","highlight_start":1,"highlight_end":33},{"text":"    /// Pins of the **Arduino Uno**, **Arduino Nano**, **SparkFun ProMini 3.3V (8Mhz)**, and **SparkFun ProMini 5V (16MHz)**.","highlight_start":1,"highlight_end":126},{"text":"    ///","highlight_start":1,"highlight_end":8},{"text":"    /// This struct is best initialized via the [`arduino_hal::pins!()`][crate::pins] macro.","highlight_start":1,"highlight_end":93},{"text":"    pub struct Pins {","highlight_start":1,"highlight_end":22},{"text":"        /// `A0`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * ADC0 (ADC input channel 0)","highlight_start":1,"highlight_end":41},{"text":"        /// * PCINT8 (pin change interrupt 8)","highlight_start":1,"highlight_end":46},{"text":"        pub a0: atmega_hal::port::PC0 = pc0,","highlight_start":1,"highlight_end":45},{"text":"        /// `A1`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * ADC1 (ADC input channel 1)","highlight_start":1,"highlight_end":41},{"text":"        /// * PCINT9 (pin change interrupt 9)","highlight_start":1,"highlight_end":46},{"text":"        pub a1: atmega_hal::port::PC1 = pc1,","highlight_start":1,"highlight_end":45},{"text":"        /// `A2`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * ADC2 (ADC input channel 2)","highlight_start":1,"highlight_end":41},{"text":"        /// * PCINT10 (pin change interrupt 10)","highlight_start":1,"highlight_end":48},{"text":"        pub a2: atmega_hal::port::PC2 = pc2,","highlight_start":1,"highlight_end":45},{"text":"        /// `A3`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * ADC3 (ADC input channel 3)","highlight_start":1,"highlight_end":41},{"text":"        /// * PCINT11 (pin change interrupt 11)","highlight_start":1,"highlight_end":48},{"text":"        pub a3: atmega_hal::port::PC3 = pc3,","highlight_start":1,"highlight_end":45},{"text":"        /// `A4`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * ADC4 (ADC input channel 4)","highlight_start":1,"highlight_end":41},{"text":"        /// * SDA (2-wire serial bus data input/output line)","highlight_start":1,"highlight_end":61},{"text":"        /// * PCINT12 (pin change interrupt 12)","highlight_start":1,"highlight_end":48},{"text":"        pub a4: atmega_hal::port::PC4 = pc4,","highlight_start":1,"highlight_end":45},{"text":"        /// `A5`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// ADC5 (ADC input channel 5)","highlight_start":1,"highlight_end":39},{"text":"        /// SCL (2-wire serial bus clock line)","highlight_start":1,"highlight_end":47},{"text":"        /// PCINT13 (pin change interrupt 13)","highlight_start":1,"highlight_end":46},{"text":"        pub a5: atmega_hal::port::PC5 = pc5,","highlight_start":1,"highlight_end":45},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        /// `D0` / `RX`","highlight_start":1,"highlight_end":24},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * RXD (USART input pin)","highlight_start":1,"highlight_end":36},{"text":"        /// * PCINT16 (pin change interrupt 16)","highlight_start":1,"highlight_end":48},{"text":"        pub d0: atmega_hal::port::PD0 = pd0,","highlight_start":1,"highlight_end":45},{"text":"        /// `D1` / `TX`","highlight_start":1,"highlight_end":24},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * TXD (USART output pin)","highlight_start":1,"highlight_end":37},{"text":"        /// * PCINT17 (pin change interrupt 17)","highlight_start":1,"highlight_end":48},{"text":"        pub d1: atmega_hal::port::PD1 = pd1,","highlight_start":1,"highlight_end":45},{"text":"        /// `D2`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * INT0 (external interrupt 0 input)","highlight_start":1,"highlight_end":48},{"text":"        /// * PCINT18 (pin change interrupt 18)","highlight_start":1,"highlight_end":48},{"text":"        pub d2: atmega_hal::port::PD2 = pd2,","highlight_start":1,"highlight_end":45},{"text":"        /// `D3`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":58},{"text":"        /// * INT1 (external interrupt 1 input)","highlight_start":1,"highlight_end":48},{"text":"        /// * OC2B (Timer/Counter2 output compare match B output)","highlight_start":1,"highlight_end":66},{"text":"        /// * PCINT19 (pin change interrupt 19)","highlight_start":1,"highlight_end":48},{"text":"        pub d3: atmega_hal::port::PD3 = pd3,","highlight_start":1,"highlight_end":45},{"text":"        /// `D4`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * XCK (USART external clock input/output)","highlight_start":1,"highlight_end":54},{"text":"        /// * T0 (Timer/Counter 0 external counter input)","highlight_start":1,"highlight_end":58},{"text":"        /// * PCINT20 (pin change interrupt 20)","highlight_start":1,"highlight_end":48},{"text":"        pub d4: atmega_hal::port::PD4 = pd4,","highlight_start":1,"highlight_end":45},{"text":"        /// `D5`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":58},{"text":"        /// * T1 (Timer/Counter 1 external counter input)","highlight_start":1,"highlight_end":58},{"text":"        /// * OC0B (Timer/Counter0 output compare match B output)","highlight_start":1,"highlight_end":66},{"text":"        /// * PCINT21 (pin change interrupt 21)","highlight_start":1,"highlight_end":48},{"text":"        pub d5: atmega_hal::port::PD5 = pd5,","highlight_start":1,"highlight_end":45},{"text":"        /// `D6`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":58},{"text":"        /// * AIN0 (analog comparator positive input)","highlight_start":1,"highlight_end":54},{"text":"        /// * OC0A (Timer/Counter0 output compare match A output)","highlight_start":1,"highlight_end":66},{"text":"        /// * PCINT22 (pin change interrupt 22)","highlight_start":1,"highlight_end":48},{"text":"        pub d6: atmega_hal::port::PD6 = pd6,","highlight_start":1,"highlight_end":45},{"text":"        /// `D7`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * AIN1 (analog comparator negative input)","highlight_start":1,"highlight_end":54},{"text":"        /// * PCINT23 (pin change interrupt 23)","highlight_start":1,"highlight_end":48},{"text":"        pub d7: atmega_hal::port::PD7 = pd7,","highlight_start":1,"highlight_end":45},{"text":"        /// `D8`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * ICP1 (Timer/Counter1 input capture input)","highlight_start":1,"highlight_end":56},{"text":"        /// * CLKO (divided system clock output)","highlight_start":1,"highlight_end":49},{"text":"        /// * PCINT0 (pin change interrupt 0)","highlight_start":1,"highlight_end":46},{"text":"        pub d8: atmega_hal::port::PB0 = pb0,","highlight_start":1,"highlight_end":45},{"text":"        /// `D9`","highlight_start":1,"highlight_end":17},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":58},{"text":"        /// * OC1A (Timer/Counter1 output compare match A output)","highlight_start":1,"highlight_end":66},{"text":"        /// * PCINT1 (pin change interrupt 1)","highlight_start":1,"highlight_end":46},{"text":"        pub d9: atmega_hal::port::PB1 = pb1,","highlight_start":1,"highlight_end":45},{"text":"        /// `D10`","highlight_start":1,"highlight_end":18},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":58},{"text":"        /// * SS (SPI bus master slave select)","highlight_start":1,"highlight_end":47},{"text":"        /// * OC1B (Timer/Counter1 output compare match B output)","highlight_start":1,"highlight_end":66},{"text":"        /// * PCINT2 (pin change interrupt 2)","highlight_start":1,"highlight_end":46},{"text":"        pub d10: atmega_hal::port::PB2 = pb2,","highlight_start":1,"highlight_end":46},{"text":"        /// `D11`","highlight_start":1,"highlight_end":18},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * **PWM**: [atmega328p_hal::timer::Timer3Pwm]","highlight_start":1,"highlight_end":58},{"text":"        /// * MOSI (SPI bus master/slave input)","highlight_start":1,"highlight_end":48},{"text":"        /// * OC2A (Timer/Counter2 output compare match A output)","highlight_start":1,"highlight_end":66},{"text":"        /// * PCINT3 (pin change interrupt 3)","highlight_start":1,"highlight_end":46},{"text":"        pub d11: atmega_hal::port::PB3 = pb3,","highlight_start":1,"highlight_end":46},{"text":"        /// `D12`","highlight_start":1,"highlight_end":18},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * MISO (SPI bus master input/slave output)","highlight_start":1,"highlight_end":55},{"text":"        /// * PCINT4 (pin change interrupt 4)","highlight_start":1,"highlight_end":46},{"text":"        pub d12: atmega_hal::port::PB4 = pb4,","highlight_start":1,"highlight_end":46},{"text":"        /// `D13`","highlight_start":1,"highlight_end":18},{"text":"        ///","highlight_start":1,"highlight_end":12},{"text":"        /// * SCK (SPI bus master clock input)","highlight_start":1,"highlight_end":47},{"text":"        /// * PCINT5 (pin change interrupt 5)","highlight_start":1,"highlight_end":46},{"text":"        /// * L LED on Arduino Uno","highlight_start":1,"highlight_end":35},{"text":"        pub d13: atmega_hal::port::PB5 = pb5,","highlight_start":1,"highlight_end":46},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    impl Pins {","highlight_start":1,"highlight_end":16},{"text":"        type Pin = Pin;","highlight_start":1,"highlight_end":24},{"text":"        type McuPins = atmega_hal::Pins;","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"avr_hal_generic::renamed_pins!","def_site_span":{"file_name":"/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/avr-hal-generic/src/port.rs","byte_start":25014,"byte_end":25039,"line_start":772,"line_end":772,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! renamed_pins {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following trait bounds were not satisfied:\n`arduino_hal::Pins: PinOps`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `is_high` exists for struct `Pin<Input<Floating>, Pins>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:61:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            let a_val = a.is_high();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `Pin<Input<Floating>, Pins>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/willa/.cargo/git/checkouts/avr-hal-f3855d5807fdfd57/21342dc/arduino-hal/src/port/uno.rs:3:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mavr_hal_generic::renamed_pins! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Pins of the **Arduino Uno**, **Arduino Nano**, **SparkFun ProMini 3.3V (8Mhz)**, and **SparkFun ProMini 5V (16MHz)**.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// This struct is best initialized via the [`arduino_hal::pins!()`][crate::pins] macro.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `arduino_hal::Pins: PinOps`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `arduino_hal::Pins: PinOps`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 3 previous errors; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors; 3 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
